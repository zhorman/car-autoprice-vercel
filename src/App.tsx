// src/App.tsx
import { useState } from 'react';
import './App.css';
import ImageUploader from './components/ImageUploader';

// 1. –°–æ–∑–¥–∞—ë–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
// –≠—Ç–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã –æ–∂–∏–¥–∞–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ—Ç API.
interface IResultData {
  estimatedHours: string | number; // –ù–æ—Ä–º–æ—á–∞—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å —á–∏—Å–ª–æ–º –∏–ª–∏ —Å—Ç—Ä–æ–∫–æ–π
  comment: string;
}

function App() {
  // 2. –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è result: —ç—Ç–æ –ª–∏–±–æ –Ω–∞—à –æ–±—ä–µ–∫—Ç, –ª–∏–±–æ null
  const [result, setResult] = useState<IResultData | null>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>('');

  // 3. –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø—ã –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
  const handleEstimate = async ({
    image,
    text,
  }: {
    image: File;
    text: string;
  }) => {
    setLoading(true);
    setError('');
    setResult(null);

    const formData = new FormData();
    formData.append('image', image);
    formData.append('text', text);

    try {
      // –î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Vercel/Netlify –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
      const apiUrl = `${import.meta.env.VITE_API_URL || ''}/api/estimate`;

      const response = await fetch(apiUrl, {
        method: 'POST',
        body: formData,
      });

      if (!response.ok) {
        // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        const errorData = await response.json();
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.');
      }

      // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—à–µ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
      const data: IResultData = await response.json();
      setResult(data);
    } catch (err: unknown) {
      // 4. –¢–∏–ø–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –±–ª–æ–∫–µ catch
      let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ü–µ–Ω–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';

      if (err instanceof Error) {
        errorMessage = err.message;
      }

      setError(errorMessage);
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="app-container">
      <header className="app-header">
        <h1>–ù–µ–π—Ä–æ–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–æ—Ä–º–æ—á–∞—Å–æ–≤ —Ä–µ–º–æ–Ω—Ç–∞ –∞–≤—Ç–æ üöó</h1>
        <p>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –æ—Ü–µ–Ω–∫–∏.</p>
      </header>
      <main>
        <ImageUploader onEstimate={handleEstimate} />
        {loading && <div className="loader"></div>}
        {error && <p className="error-message">{error}</p>}
        {result && (
          <div className="result-container">
            <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∫–∏:</h2>
            <p>
              <strong>–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–µ –Ω–æ—Ä–º–æ—á–∞—Å—ã:</strong> {result.estimatedHours}{' '}
              —á.
            </p>
            <p>
              <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π AI:</strong> {result.comment}
            </p>
          </div>
        )}
      </main>
    </div>
  );
}

export default App;
